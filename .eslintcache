[{"C:\\weather\\weather\\src\\index.js":"1","C:\\weather\\weather\\src\\reportWebVitals.js":"2","C:\\weather\\weather\\src\\App.js":"3","C:\\weather\\weather\\src\\component\\Weather.js":"4","C:\\weather\\weather\\src\\component\\Weather_body.js":"5"},{"size":500,"mtime":1612256619278,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2027,"mtime":1612247017251,"results":"9","hashOfConfig":"7"},{"size":3123,"mtime":1612358494860,"results":"10","hashOfConfig":"7"},{"size":5904,"mtime":1612411128097,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"109ty6d",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\weather\\weather\\src\\index.js",[],["25","26"],"C:\\weather\\weather\\src\\reportWebVitals.js",[],"C:\\weather\\weather\\src\\App.js",["27"],"import React, {useState}from 'react';\nimport Weather from './component/Weather'\n\n/*\nconst api = {\n  key:\"95cb5367adec4fce0c50ae88f92f6d82\",\n  base:\"https://api.openweathermap.org/data/2.5/\"\n\n}\n\nconst dateBuilder = (d) =>{\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year}`\n}\n\n\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather,setWeather] = useState({});\n\n  const search = evt =>{\n    if(evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res=>res.json())\n        .then(result=>{\n          setQuery('');\n          setWeather(result);\n          console.log(result);\n        });\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\" className=\"search-bar\"\n          placeholder=\"Search...\"\n          onChange={e=>setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n          >\n          </input>\n        </div>\n        {(typeof weather.main !=\"undefined\")?(\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name},{weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n              <div className=\"temp\">\n                {Math.round(weather.main.temp)}°C\n              </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        </div>\n        ):('')}\n\n      </main>\n    </div>\n  );\n}\n*/\nfunction App() {\n  return(\n    <div className=\"App\">\n      <Weather />\n    </div>\n\n  );\n  \n}\nexport default App;\n","C:\\weather\\weather\\src\\component\\Weather.js",["28","29","30"],"import React from 'react';\r\nimport Axios from 'axios';\r\nimport Weather_body from \"./Weather_body\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport '../Style/style.css'\r\nimport {Card,Button,Row,Col,Container} from \"react-bootstrap\";\r\n\r\nconst API_key = '95cb5367adec4fce0c50ae88f92f6d82';\r\nconst city = 'Sydney';\r\n//const api = `http://api.openweathermap.org/data/2.5/forecast?q=${city}&mode=json&units=metric&appid=${API_key}`;\r\nconst weatherApi = `http://api.openweathermap.org/data/2.5/weather?q=${city}&mode=json&units=metric&appid=${API_key}`;\r\n\r\n\r\nclass Weather extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            temp:'',\r\n            city:'',\r\n            visibility:'',\r\n            humidity:'',\r\n            wind_speed:'',\r\n            city:'',\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        //API call\r\n        const res = await Axios.get(weatherApi)\r\n        const {data: {main: {temp } } } = res\r\n        const {data: {weather:{0:{main}} } } = res\r\n        const {data: {main: {humidity } } } = res\r\n        const {data: {wind: {speed } } } = res\r\n        const {data: {name } } = res\r\n\r\n        this.setState({\r\n            temp:Math.round(temp),\r\n            visibility:main,\r\n            humidity:humidity,\r\n            wind_speed:speed,\r\n            city:name,\r\n        })\r\n        //console.log(res.data);\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <main>\r\n                <Card className = \"weather-card\">\r\n                    <Card.Header className=\"weather-card_header\">\r\n                        <Container>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Row>\r\n                                        <h1 className = \"weather-card_temperature\">{this.state.temp}°</h1>\r\n                                    </Row>\r\n                                        <h1 className = \"weather-card_visibility\">{this.state.visibility}</h1>\r\n                                    <Row>\r\n                                        <Row><h1 className = \"weather-card_humidity\">HUMIDITY</h1></Row>\r\n                                        <Row><h1 className = \"weather-card_humidity_percent\">{this.state.humidity}%</h1></Row>\r\n                                        <Row><div className=\"vl\"></div></Row>\r\n                                        <Row><h1 className = \"weather-card_wind\">WIND</h1></Row>\r\n                                        <Row><h1 className = \"weather-card_wind_speed\">{this.state.wind_speed}m/s</h1></Row>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col>\r\n                                    <h1 className = \"weather-card_city\">{this.state.city}</h1>\r\n                                    <hr></hr>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Card.Header>\r\n                    <Weather_body/>\r\n                </Card>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Weather","C:\\weather\\weather\\src\\component\\Weather_body.js",["31","32","33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":16,"nodeType":"41","messageId":"42","endLine":1,"endColumn":24},{"ruleId":"39","severity":1,"message":"43","line":6,"column":14,"nodeType":"41","messageId":"42","endLine":6,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":23,"column":13,"nodeType":"46","messageId":"47","endLine":23,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":72,"column":21,"nodeType":"50","endLine":72,"endColumn":36},{"ruleId":"39","severity":1,"message":"43","line":5,"column":14,"nodeType":"41","messageId":"42","endLine":5,"endColumn":20},{"ruleId":"39","severity":1,"message":"51","line":7,"column":10,"nodeType":"41","messageId":"42","endLine":7,"endColumn":16},{"ruleId":"39","severity":1,"message":"52","line":7,"column":17,"nodeType":"41","messageId":"42","endLine":7,"endColumn":23},{"ruleId":"39","severity":1,"message":"53","line":7,"column":24,"nodeType":"41","messageId":"42","endLine":7,"endColumn":30},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-dupe-keys","Duplicate key 'city'.","ObjectExpression","unexpected","react/jsx-pascal-case","Imported JSX component Weather_body must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'faBolt' is defined but never used.","'faSmog' is defined but never used.","'faWind' is defined but never used.","no-global-assign","no-unsafe-negation"]